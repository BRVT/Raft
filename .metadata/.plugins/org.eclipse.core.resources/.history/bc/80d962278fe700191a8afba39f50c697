import java.io.IOException;
import java.net.MalformedURLException;
import java.net.ServerSocket;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;

public class Server extends UnicastRemoteObject implements IServer {
	
	private static final long serialVersionUID = -7438376157658248593L;
	private int term;
	private int id;
	private STATE state;
	
	/**
	 * 
	 */
	public Server() throws RemoteException{
		try {
			Naming.rebind("rmi://localhost/request", this);
			System.out.println("Server is ready."); //RMI bind
		} catch (MalformedURLException e) {
			System.err.println("Server failed.");
		}
	}
	
	public static void main(String[] args) {
		
		if(args.length != 1) {
			System.err.println("\"Utilizacao incorrecta. \\n Usage : Server <port> \\n exemplo: Server 23456\"");
		}
		else {
			System.out.println("Server"+'\n'+ "Port: " + args[0]);
			
			int port = Integer.parseInt(args[0]);
			
			try {
				Server server = new Server();
			} catch (RemoteException e) {
				System.err.println(e.getMessage());
			}
			
			Server.startServer(port);
			
		}
		
	}
	
	private static void startServer(int port) {
		
		ServerSocket sSoc = null;
		
		try {
			sSoc = new ServerSocket(port);
		} catch (IOException e) {
			System.err.println(e.getMessage());
			System.exit(-1);
		}
		
		
	}

	public String request(String s, int id) {
		return "Request processed";
	}
	
}
